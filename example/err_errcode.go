// Code generated by "errcode -type=Err,Err2 --linecomment -unknowncode=-1 -codefunc=Code"; DO NOT EDIT.

package example

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the errcode command to generate them again.
	var x [1]struct{}
	_ = x[ErrPlanIsEmpty-10]
	_ = x[ErrManualCreateFailed-11]
	_ = x[ErrRPCFailed-12]
	_ = x[ErrStageNotMatched-13]
	_ = x[ErrNoAvailable-14]
	_ = x[ErrUnmarshalFailed-15]
	_ = x[ErrGetFailed-17]
	_ = x[ErrPlanNotSupport-18]
	_ = x[ErrDBFailed-19]
}

const (
	_Err_name_0 = "plan is emptymanual create operation failedrpc request failedstage not matchednot availablejson unmarshal failed"
	_Err_name_1 = "get data failedplan not supportdb operation failed"
)

var (
	_Err_index_0 = [...]uint8{0, 13, 43, 61, 78, 91, 112}
	_Err_index_1 = [...]uint8{0, 15, 31, 50}
)

func (i Err) Error() string {
	return i.String()
}

func (i Err) String() string {
	switch {
	case 10 <= i && i <= 15:
		i -= 10
		return _Err_name_0[_Err_index_0[i]:_Err_index_0[i+1]]
	case 17 <= i && i <= 19:
		i -= 17
		return _Err_name_1[_Err_index_1[i]:_Err_index_1[i+1]]
	default:
		return "Err(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the errcode command to generate them again.
	var x [1]struct{}
	_ = x[Err2Name-100001]
	_ = x[Err2Addr-200001]
}

const (
	_Err2_name_0 = "invalid name"
	_Err2_name_1 = "invalid addr"
)

func (i Err2) Error() string {
	return i.String()
}

func (i Err2) String() string {
	switch {
	case i == 100001:
		return _Err2_name_0
	case i == 200001:
		return _Err2_name_1
	default:
		return "Err2(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

var _ecCodeMap = map[string]int{
	ErrPlanIsEmpty.String():        int(ErrPlanIsEmpty),
	ErrManualCreateFailed.String(): int(ErrManualCreateFailed),
	ErrRPCFailed.String():          int(ErrRPCFailed),
	ErrStageNotMatched.String():    int(ErrStageNotMatched),
	ErrNoAvailable.String():        int(ErrNoAvailable),
	ErrUnmarshalFailed.String():    int(ErrUnmarshalFailed),
	ErrGetFailed.String():          int(ErrGetFailed),
	ErrPlanNotSupport.String():     int(ErrPlanNotSupport),
	ErrDBFailed.String():           int(ErrDBFailed),
	Err2Name.String():              int(Err2Name),
	Err2Addr.String():              int(Err2Addr),
}

func Code(e error) int {
	v, ok := _ecCodeMap[e.Error()]
	if ok {
		return v
	}
	return -1
}
